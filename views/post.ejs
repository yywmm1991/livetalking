<% include header %>

<br/>
<br/>

<div class="container">
	<div class="col-sm-4">
		<form method="post">
			<h3>
				<a><%= user.name %></a>
			</h3>

			<h5>Text</h5>
			<textarea name="post" class="form-control" rows="5"></textarea>
			<br />
			<input class="btn btn-info" type="submit" value="send" />
		</form>
	</div>

	<div class="col-sm-6">
		<div id="talkBox">
			<% posts.forEach(function(post, index){ %>

			<p class="info">
				<a href="#"><%= post.name %></a>
				<%= post.time.minute %>
			</p>
			<p><%= post.post %></p>

			<% }) %>
		</div>
		<div id="test"></div>
	</div>
	<video id="local" style="margin-top: 30px"></video>
    <video id="remote"></video>
</div>

<script>
var flagTime;
(function update(){
	$.ajax({
		url: "/post/get",
		type: "GET",
		success: function(data,status){
			if(data[0].time.iden != flagTime){
				talkbox(data[0]);
				flagTime = data[0].time.iden;
			}

			setTimeout(update,1000);
		}
	});
})();

function talkbox(data){
	var str = '<p class="info">'+
	'<a href="#">'+data.name+'</a>'
	+data.time.minute+
	'</p><p>'+data.post+'</p>';
	$(str).insertBefore("#talkBox p:first");
};

var offerOptions = {
 offerToReceiveAudio: 1,
 offerToReceiveVideo: 1
};

var localStream;
var remoteVideo=document.getElementById('remote');
var localVideo=document.getElementById('local');




//start
navigator.mediaDevices.getUserMedia({audio: true, video: true}).then(data => {
 console.log(data);
 localVideo.srcObject=data; // drawing video from camera directly to video element
 localStream=data

 // get ref to video and audio tracks
 var videoTracks = localStream.getVideoTracks();
 var audioTracks = localStream.getAudioTracks();

 // create two peers
 var pc1 = new webkitRTCPeerConnection(null);
 var pc2 = new webkitRTCPeerConnection(null);


 pc1.onicecandidate = function(e) {
  if (e.candidate) {
    console.log('made connection to peer 1', e);
    pc2.addIceCandidate(new RTCIceCandidate(e.candidate)).then(out => console.log(out), err => console.log(1, err));
  }
 };
 pc2.onicecandidate = function(e) {
   if (e.candidate) {
     console.log('made connection to peer 2', e);
     pc1.addIceCandidate(new RTCIceCandidate(e.candidate)).then(out => console.log(out), err => console.log(1, err));
   }
 };

 // when there's data on the stream, put it in the 2nd video player
 pc2.onaddstream = function(e) {
   console.log("p2 onaddstream")
   remoteVideo.srcObject = e.stream;
 }
//console.log(pc1);

// write the data contained in localStream to the peer pc1
pc1.addStream(localStream);

// handshaking step
pc1.createOffer(offerOptions).then(offerDesc => { // 1. create offer
 console.log("DESC", offerDesc.sdp)
 // desc.sdp would be sent to the other peer, and decoded back to desc (with RTCSessionDescription)

 // 2. add the offer to both peers
 pc1.setLocalDescription(offerDesc).then(out => console.log(out), err => console.log(1, err));
 pc2.setRemoteDescription(offerDesc).then(out => console.log(out), err => console.log(1, err));

 // 3. Create an answer to the offer
 pc2.createAnswer().then(answerDesc => {
   console.log("createAnswer")

   // 4. add answer to both peers again
   pc2.setLocalDescription(answerDesc).then(out => console.log(out), err => console.log(1, err));
   pc1.setRemoteDescription(answerDesc).then(out => console.log(out), err => console.log(1, err));

 }, err => {
   console.log("an error", err)
 });
});
});

</script>

<% include footer %>